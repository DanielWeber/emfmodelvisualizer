import ecore;
import graphmm35;

extension org::openarchitectureware::vis::graphmmlib;

Object top(EPackage p):
	toCollection(p);

create GraphCollection toCollection( EPackage p ):
	graphs.add( toAssocGraph(p)) ->
	graphs.add( toInheritGraph(p));

create Graph toAssocGraph(EPackage p):
	setName( "assoc & attr" ) ->
	nodes.add( p.toNode("ass") ) ->
	nodes.addAll( p.eClassifiers.typeSelect(EClass).toNode("ass") ) ->
	edges.addAll( p.eClassifiers.typeSelect(EClass).toEdge("ass") ) ->
	edges.addAll( p.eClassifiers.typeSelect(EClass).eReferences.toEdge("ass") ) ->
	nodes.addAll( p.eClassifiers.typeSelect(EClass).eAttributes.toNode("ass") ) ->
	edges.addAll( p.eClassifiers.typeSelect(EClass).eAttributes.toEdge("ass") );

create Graph toInheritGraph(EPackage p):
	setName( "inheritance" ) ->
	addLayoutHint( "zestlayout", "tree" ) ->
	nodes.add( p.toNode("i") ) ->
	nodes.addAll( p.eClassifiers.typeSelect(EClass).toNode("i") ) ->
	edges.addAll( p.eClassifiers.typeSelect(EClass).iterateSuperTypes("i") );

iterateSuperTypes(EClass c, Object tkn):
	c.eSuperTypes.toInheritanceEdge(c, tkn);

create SimpleDirectedEdge toInheritanceEdge( EClass super, EClass sub, Object tkn ):
	setSource( super.toNode(tkn) ) ->
	setTarget( sub.toNode(tkn) );

create SimpleNode toNode( EPackage p, Object tkn ):
	setLabel( p.name ) ->
	setCategory("package") ->
	setFillcolor( ColorEnum::white);

create SimpleNode toNode( EClass cls, Object tkn ):
	setLabel( cls.name ) ->
	setFillcolor( cls.abstract ? ColorEnum::white : ColorEnum::lightGray );

create SimpleNode toNode( EAttribute attr, Object tkn ):
	setCategory( "attributes" ) ->
	setLabel( attr.name ) ->
	setFillcolor( ColorEnum::lightGreen );

create SimpleDirectedEdge toEdge( EReference ref, Object tkn ):
	setLabel( ref.name ) ->
	setCategory("associations") ->
	setWeight( ref.containment ? 50 : 0 ) ->
	setWidth( ref.containment ? 2 : 1 ) ->
	setSource( ((EClass)ref.eContainer).toNode(tkn) ) ->
	setTarget( ((EClass)ref.eType).toNode(tkn) );

create SimpleDirectedEdge toEdge( EAttribute a, Object tkn ):
	setCategory( "attributes" ) ->
	setWeight( 100  ) ->
	setSource( ((EClass)a.eContainer).toNode(tkn) ) ->
	setTarget( a.toNode(tkn) );

create SimpleDirectedEdge toEdge( EClass c, Object tkn ):
	setCategory( "package" ) ->
	setSource( ((EPackage)c.eContainer).toNode(tkn) ) ->
	setTarget( c.toNode(tkn) );

