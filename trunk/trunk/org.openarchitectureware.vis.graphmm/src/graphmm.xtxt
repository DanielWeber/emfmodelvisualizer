GraphCollection:
	(prolog=Prolog)?
	(graphs+=Graph)*;

Prolog:
	"prolog" "{"
		("iconbasepath" iconBasePath=STRING ";")?
	"}";

Graph:
	"graph" name=ID ("top" "=" topnode=[Node])? "{"
		("layoutHints" layoutHints = Properties )?
		"nodes" "{"
			(nodes+=Node)*
		"}"
		"edges" "{"
			(edges+=Edge)*
	  	"}"
	"}";
	  
Node:
	SimpleNode | ContainerNode | CompartmentNode | UMLNode;

SimpleNode:
	"node" name=ID 
		("label" label=STRING)? 
		("tooltip" tooltip=STRING)?
		("icon" icon=STRING)?
		("textcolor" textcolor=ColorEnum)?
		("linecolor" linecolor=ColorEnum)?
		("fillcolor" fillcolor=ColorEnum)?
		("source" sourceLocation=STRING)? 
		("category" category=STRING)?
		("shape" shape=ShapeEnum)?
		("userData" userData = Properties )?
	";";
	
ContainerNode:
	"containernode" name=ID 
		("label" label=STRING)? 
		("tooltip" tooltip=STRING)?
		("icon" icon=STRING)?
		("textcolor" textcolor=ColorEnum)?
		("linecolor" linecolor=ColorEnum)?
		("fillcolor" fillcolor=ColorEnum)?
		("source" sourceLocation=STRING)? 
		("category" category=STRING)?
		("shape" shape=ShapeEnum)?
		("userData" userData = Properties )?
		("contained" containedGraph=Graph )?
	";";

CompartmentNode:
	"compartmentnode" name=ID
		("label" label=STRING)? 
		("tooltip" tooltip=STRING)?
		("icon" icon=STRING)?
		("textcolor" textcolor=ColorEnum)?
		("linecolor" linecolor=ColorEnum)?
		("fillcolor" fillcolor=ColorEnum)?
		("source" sourceLocation=STRING)? 
		("category" category=STRING)?
		("shape" shape=ShapeEnum)?
		("userData" userData = Properties )?
		(compartments+=Compartment)*
	";";

UMLNode:
	"umlnode" name=ID
		("label" label=STRING)? 
		("tooltip" tooltip=STRING)?
		("icon" icon=STRING)?
		("textcolor" textcolor=ColorEnum)?
		("linecolor" linecolor=ColorEnum)?
		("fillcolor" fillcolor=ColorEnum)?
		("source" sourceLocation=STRING)? 
		("category" category=STRING)?
		("shape" shape=ShapeEnum)?
		("userData" userData = Properties )?
		("attributeCompartment" attributeCompartment=Compartment)
		("methodCompartment" methodCompartment=Compartment)
	";";

Compartment:
	"compartment" name=ID "{"
		("category" category=STRING)?
		("entry" entries+=STRING)*
	"}";
	
Edge:
	SimpleDirectedEdge;

SimpleDirectedEdge:
	source=[Node] direction=DirectionEnum target=[Node]
		(containment?="containment")? (proxied?="proxied")? (inheritance?="inheritance")?
		("label" label=STRING)?
		("sourcelabelleft" sourcelabelleft=STRING)?
		("sourcelabelright" sourcelabelright=STRING)?
		("targetlabelleft" targetlabelleft=STRING)?
		("targetlabelright" targetlabelright=STRING)?
		("tooltip" tooltip=STRING)? 
		("icon" icon=STRING)?
		("color" color=ColorEnum)? 
		("weight" weight=INT)?
		("width" width=INT)?
		("style" style=LineStyleEnum)?
		(association=AssociationEnum "association")?
		("curvedepth" curvedepth=INT)? 
		("category" category=STRING)?
		("userData" userData = Properties )?
	";";

Properties:
	(nvpairs+=NVPair)*;


NVPair:
	name=ID ":" type=DataType "=" value=STRING ";";
	
DataType:
  	TextType | IntegerType | BooleanType;
  	
TextType:		"text";

IntegerType:	"int";

BooleanType:	"boolean";	
	
Enum DirectionEnum:
	directed	= "->"	| // 1
	undirected	= "--"	; // 2
	
Enum ColorEnum:
	white		= "white"		| // 1
	lightGray	= "lightGray"	| // 2
	gray		= "gray"		| // 3
	darkGray	= "darkGray"	| // 4
	black		= "black"		| // 5
	red			= "red"			| // 6
	orange		= "orange"		| // 7
	yellow		= "yellow"		| // 8
	green		= "green"		| // 9
	lightGreen	= "lightGreen"	| // 10
	darkGreen	= "darkGreen"	| // 11
	cyan		= "cyan"		| // 12
	lightBlue	= "lightBlue"	| // 13
	blue		= "blue"		| // 14
	darkBlue	= "darkBlue"	; // 15
	

Enum ShapeEnum:
	ubi_cone			= "ubi_cone"			|	// 1
	ubi_cube			= "ubi_cube"			|	// 2
	ubi_dodecahedron	= "ubi_dodecahedron"	|	// 3
	ubi_icosahedron		= "ubi_icosahedron"		|	// 4
	ubi_octahedron		= "ubi_octahedron"		|	// 5
	ubi_sphere			= "ubi_sphere"			|   // 6
	ubi_torus			= "ubi_torus"			;	// 7
	
Enum LineStyleEnum:
	solid			= "solid"			|	// 1
	dashed			= "dashed"			|	// 2
	dotted			= "dotted"			|	// 3
	dashDotted		= "dashDotted"		|	// 4
	dashDotDotted	= "dashDotDotted"	;	// 5
	
Enum AssociationEnum:
	undirected		= "undirected"		|	// 1
	directed		= "directed"		|	// 2
	generalization	= "generalization"	|	// 3
	composition		= "composition"		|	// 4
	aggreagation	= "aggregation"		;	// 5
