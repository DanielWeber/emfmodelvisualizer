import graphmm;

postprocess( GraphCollection this ):
	graphs.nodes.addAll( graphs.umlNodes().transform() ) ->
	graphs.edges.select(e|UMLNode.isInstance(e.source)).replaceSource() ->
	graphs.edges.select(e|UMLNode.isInstance(e.target)).replaceTarget() ->
	graphs.nodes.removeAll( graphs.umlNodes() );

replaceSource( Edge e ):
	e.setSource( ((UMLNode)e.source).transform() );
	
replaceTarget( Edge e ):
	e.setTarget( ((UMLNode)e.target).transform() );
	
create CompartmentNode transform( UMLNode n ):	
null;
	
	
	
	
umlNodes( Graph g ):
	g.nodes.typeSelect(UMLNode);